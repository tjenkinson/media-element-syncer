{"version":3,"sources":["media-element-syncer.js"],"names":["EVENTS","MediaElementSyncer","source","refreshInterval","correctionTime","seekThreshold","_source","_children","_updateTimer","_refreshInterval","_correctionTime","_seekThreshold","collecting","_eventHandler","window","setTimeout","_update","element","indexOf","length","_addEventListeners","push","index","_removeEventListeners","splice","clearTimeout","sourceTime","currentTime","sourcePaused","paused","ended","sourcePlaybackRate","playbackRate","forEach","child","diff","rate","Math","max","pause","play","abs","e","eventName","addEventListener","removeEventListener"],"mappings":"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","file":"media-element-syncer.js","sourceRoot":"../src","sourcesContent":["const EVENTS = ['play', 'pause', 'seeking', 'seeked', 'playing', 'stalled'];\n\nexport class MediaElementSyncer {\n  constructor(\n    source,\n    { refreshInterval = 200, correctionTime = 500, seekThreshold = 1000 } = {}\n  ) {\n    this._source = source;\n    this._children = [];\n    this._updateTimer = null;\n    this._refreshInterval = refreshInterval;\n    this._correctionTime = correctionTime / 1000;\n    this._seekThreshold = seekThreshold / 1000;\n    let collecting = false;\n    this._eventHandler = () => {\n      if (collecting) {\n        return;\n      }\n      collecting = true;\n      window.setTimeout(() => {\n        collecting = false;\n        this._update();\n      }, 0);\n    };\n  }\n\n  addChild(element) {\n    if (this._children.indexOf(element) === -1) {\n      if (!this._children.length) {\n        this._addEventListeners(this._source);\n      }\n      this._children.push(element);\n      this._addEventListeners(element);\n      this._update();\n    }\n  }\n\n  removeChild(element) {\n    const index = this._children.indexOf(element);\n    if (index >= 0) {\n      this._removeEventListeners(element);\n      this._children.splice(index, 1);\n      if (!this._children.length) {\n        if (this._updateTimer) {\n          window.clearTimeout(this._updateTimer);\n          this._updateTimer = null;\n        }\n        this._removeEventListeners(this._source);\n      }\n    }\n  }\n\n  _update() {\n    if (this._updateTimer) {\n      window.clearTimeout(this._updateTimer);\n    }\n\n    if (!this._children.length) {\n      return;\n    }\n\n    const sourceTime = this._source.currentTime;\n    const sourcePaused = this._source.paused || this._source.ended;\n    const sourcePlaybackRate = this._source.playbackRate;\n    this._children.forEach(child => {\n      try {\n        const currentTime = child.currentTime;\n        const diff = sourceTime - currentTime;\n        const rate = Math.max(\n          0,\n          ((diff + this._correctionTime) / this._correctionTime) *\n            sourcePlaybackRate\n        );\n        if (sourcePaused !== child.paused) {\n          sourcePaused ? child.pause() : child.play();\n        }\n        if (sourcePaused || rate < 0 || Math.abs(diff) >= this._seekThreshold) {\n          child.currentTime = sourceTime;\n          child.playbackRate = sourcePlaybackRate;\n        } else {\n          child.playbackRate = rate;\n        }\n      } catch (e) {\n        window.setTimeout(() => {\n          throw e;\n        }, 0);\n      }\n    });\n\n    this._updateTimer = window.setTimeout(\n      () => this._update(),\n      this._refreshInterval\n    );\n  }\n\n  _addEventListeners(element) {\n    EVENTS.forEach(eventName =>\n      element.addEventListener(eventName, this._eventHandler)\n    );\n  }\n\n  _removeEventListeners(element) {\n    EVENTS.forEach(eventName =>\n      element.removeEventListener(eventName, this._eventHandler)\n    );\n  }\n}\n"]}